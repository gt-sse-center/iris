name: CI

on:
  push:
    branches:
      - master
      - testci
  pull_request:
    branches:
      - master
  schedule:
    - cron: "9 16 * * 1"

jobs:
  test:
    name: "${{ matrix.python-version }} â€¢ ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        exclude:
          # Reduce matrix size - only test edge cases on all platforms
          - os: macos-latest
            python-version: "3.10"
          - os: macos-latest  
            python-version: "3.11"
          - os: macos-latest
            python-version: "3.12"
          - os: windows-latest
            python-version: "3.10"
          - os: windows-latest
            python-version: "3.11" 
          - os: windows-latest
            python-version: "3.12"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install UV
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Install OpenMP (macOS)
        if: runner.os == 'macOS'
        run: brew install libomp

      - name: Verify UV installation
        run: uv --version
          
      - name: Create virtual environment
        run: uv venv

      - name: Install dependencies and IRIS
        run: uv pip install -e ".[test]"

      - name: Verify installation
        run: uv run python environment_scripts/verify_installation.py

      - name: Test CLI functionality
        run: uv run iris --help

      - name: Run pytest (Ubuntu only for coverage)
        if: matrix.os == 'ubuntu-latest'
        run: |
          uv pip install pytest pytest-cov codecov
          uv run python -m pytest -v --cov=iris --color=yes --cov-report=term-missing --cov-report=xml

      - name: Run pytest (other platforms)
        if: matrix.os != 'ubuntu-latest'
        run: |
          uv pip install pytest
          uv run python -m pytest -v

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
