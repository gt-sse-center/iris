name: Python package

on: 
  push:
  pull_request:

jobs:
  test:
    name: Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install UV (Unix)
      if: runner.os != 'Windows'
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
    - name: Install UV (Windows)
      if: runner.os == 'Windows'
      run: |
        powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"
        echo "$env:USERPROFILE\.cargo\bin" >> $env:GITHUB_PATH
        
    - name: Install OpenMP (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install libomp
        
    - name: Create virtual environment
      run: |
        uv venv
        
    - name: Install dependencies
      run: |
        uv pip install -e ".[test]"
        
    - name: Verify installation
      run: |
        uv run python verify_installation.py
        
    - name: Test CLI functionality
      run: |
        uv run iris --help
